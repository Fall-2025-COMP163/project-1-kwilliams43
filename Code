"""
COMP 163 - Project 1: Character Creator & Saving/Loading
Name: [Your Name Here]
Date: [Date]

AI Usage: ChatGPT (GPT-5) helped complete function logic for stat calculation, file I/O, and level-up handling.
"""

def calculate_stats(character_class, level):
    """
    Calculates base stats based on class and level
    Returns: tuple of (strength, magic, health)
    """
    if character_class.lower() == "warrior":
        strength = 10 + level * 5
        magic = 3 + level * 2
        health = 100 + level * 10
    elif character_class.lower() == "mage":
        strength = 3 + level * 2
        magic = 12 + level * 5
        health = 70 + level * 8
    elif character_class.lower() == "rogue":
        strength = 7 + level * 4
        magic = 7 + level * 3
        health = 80 + level * 7
    elif character_class.lower() == "cleric":
        strength = 6 + level * 3
        magic = 10 + level * 4
        health = 90 + level * 9
    else:
        strength = 8 + level * 3
        magic = 8 + level * 3
        health = 85 + level * 8

    return (strength, magic, health)


def create_character(name, character_class):
    """
    Creates a new character dictionary with calculated stats
    Returns: dictionary with keys: name, class, level, strength, magic, health, gold
    """
    level = 1
    strength, magic, health = calculate_stats(character_class, level)
    gold = 100

    return {
        "name": name,
        "class": character_class,
        "level": level,
        "strength": strength,
        "magic": magic,
        "health": health,
        "gold": gold
    }


def save_character(character, filename):
    """
    Saves character to text file in specific format
    Returns: True if successful, False if error occurred
    """
    f = open(filename, "w")
    f.write(f"Character Name: {character['name']}\n")
    f.write(f"Class: {character['class']}\n")
    f.write(f"Level: {character['level']}\n")
    f.write(f"Strength: {character['strength']}\n")
    f.write(f"Magic: {character['magic']}\n")
    f.write(f"Health: {character['health']}\n")
    f.write(f"Gold: {character['gold']}\n")
    f.close()
    return True


def load_character(filename):
    """
    Loads character from text file
    Returns: character dictionary if successful, None if file not found
    """
    f = open(filename, "r")
    lines = f.readlines()
    f.close()

    data = {}
    for line in lines:
        key, value = line.strip().split(": ", 1)
        data[key] = value

    character = {
        "name": data["Character Name"],
        "class": data["Class"],
        "level": int(data["Level"]),
        "strength": int(data["Strength"]),
        "magic": int(data["Magic"]),
        "health": int(data["Health"]),
        "gold": int(data["Gold"])
    }

    return character


def display_character(character):
    """
    Prints formatted character sheet
    """
    print("=== CHARACTER SHEET ===")
    print(f"Name: {character['name']}")
    print(f"Class: {character['class']}")
    print(f"Level: {character['level']}")
    print(f"Strength: {character['strength']}")
    print(f"Magic: {character['magic']}")
    print(f"Health: {character['health']}")
    print(f"Gold: {character['gold']}")
    print("========================")


def level_up(character):
    """
    Increases character level and recalculates stats
    Modifies the character dictionary directly
    """
    character["level"] += 1
    strength, magic, health = calculate_stats(character["class"], character["level"])
    character["strength"] = strength
    character["magic"] = magic
    character["health"] = health
    print(f"{character['name']} leveled up to level {character['level']}!")


# Main program area (optional - for testing your functions)
if __name__ == "__main__":
    print("=== CHARACTER CREATOR ===")
    name = input("Enter your character's name: ")
    char_class = input("Choose a class (Warrior, Mage, Rogue, Cleric): ")

    char = create_character(name, char_class)
    display_character(char)

    filename = f"{char['name']}_save.txt"
    save_character(char, filename)
    print(f"Character saved to {filename}!")

    print("\nLoading character...")
    loaded_char = load_character(filename)
    display_character(loaded_char)

    print("\nLeveling up your character...")
    level_up(loaded_char)
    display_character(loaded_char)

